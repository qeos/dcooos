#ifndef HEAP_H_INCLUDED
#define HEAP_H_INCLUDED

/*

    HAT - heap_as_tree.c
    HAA - heap_as_array.c

*/

//#define HEAP_MOD_HAT
#define HEAP_MOD_HAA

u8 maxmem;

u8 kmalloc_aligned(u8 len, u8 align){

#ifdef HEAP_MOD_HAT
    return HAT_kmalloc(len, align);
#endif // HEAP_MOD_HAT

#ifdef HEAP_MOD_HAA
    return HAA_kmalloc(len, align);
#endif // HEAP_MOD_HAA

}

u8 kmalloc(u8 len){

    return kmalloc_aligned(len, 0);

}

void kfree(u8 ptr){

#ifdef HEAP_MOD_HAT
    HAT_kfree(ptr);
#endif // HEAP_MOD_HAT

#ifdef HEAP_MOD_HAA
    HAA_kfree(ptr);
#endif // HEAP_MOD_HAA

}

u8 get_free_heap_size(){
extern void heap_print(){
extern void heap_init(){
extern void init_heap();


#endif // HEAP_H_INCLUDED
